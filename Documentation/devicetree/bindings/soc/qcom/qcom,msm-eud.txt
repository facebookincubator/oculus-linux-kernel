* Qualcomm Technologies Inc Embedded USB Debugger (EUD)

The EUD (Embedded USB Debugger) is a mini-USB hub implemented
on chip to support the USB-based debug and trace capabilities.

Required properties:

 - compatible:  Should be "qcom,msm-eud"
 - interrupt-names:  Should be "eud_irq"
 - interrupts:  Interrupt number
 - reg: Should be address and size of EUD register space
 - reg-names: Should be "eud_base"
 - clocks: a list of phandles to the PHY clocks. Use as per
   Documentation/devicetree/bindings/clock/clock-bindings.txt
 - clock-names: Names of the clocks in 1-1 correspondence with
   the "clocks" property.
 - <supply-name>-supply: phandle to the regulator device tree node
   Required "supply-name" examples are:
	"vdda33" : 3.3v supply to eud.

Driver notifies clients via extcon for VBUS spoof attach/detach
and charger enable/disable events. Clients registered for these
notifications should have extcon property set to eud.

An example for EUD device node:

	eud: qcom,msm-eud@88e0000 {
		compatible = "qcom,msm-eud";
		interrupt-names = "eud_irq";
		interrupts = <GIC_SPI 492 IRQ_TYPE_LEVEL_HIGH>;
		reg = <0x88e0000 0x4000>;
		reg-names = "eud_base";
		clocks = <&clock_gcc GCC_USB_PHY_CFG_AHB2PHY_CLK>;
		clock-names = "cfg_ahb_clk";
		vdda33-supply = <&pm8998_l24>;
	};

An example for EUD extcon client:

	usb3 {
		extcon = <&eud>;
	};

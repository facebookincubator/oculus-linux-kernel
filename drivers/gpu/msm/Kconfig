# SPDX-License-Identifier: GPL-2.0-only
config QCOM_KGSL
	tristate "Qualcomm Technologies, Inc. 3D Graphics driver"
	depends on ARCH_QCOM
	depends on QCOM_QFPROM
	select MSM_SUBSYSTEM_RESTART
	select GENERIC_ALLOCATOR
	select FW_LOADER
	select PM_DEVFREQ
	select QCOM_SCM
	select DEVFREQ_GOV_SIMPLE_ONDEMAND
	select DEVFREQ_GOV_PERFORMANCE
	select DEVFREQ_GOV_QCOM_ADRENO_TZ
	select DEVFREQ_GOV_QCOM_GPUBW_MON
	help
	  3D graphics driver for the Adreno family of GPUs from QTI.
	  Required to use hardware accelerated OpenGL, compute and Vulkan
	  on QTI targets. This includes power management, memory management,
	  and scheduling for the Adreno GPUs.

config DEVFREQ_GOV_QCOM_ADRENO_TZ
	tristate "Qualcomm Technologies, Inc. GPU frequency governor"
	depends on PM_DEVFREQ && QCOM_KGSL
	help
	  GPU frequency governor for the Adreno GPU. Sets the frequency
	  using an "on demand" algorithm in conjunction with other
	  components on Adreno platforms. This is not useful for non-Adreno
	  devices.

config DEVFREQ_GOV_QCOM_GPUBW_MON
	tristate "GPU BW voting governor"
	depends on DEVFREQ_GOV_QCOM_ADRENO_TZ
	help
	  This governor works together with Adreno Trustzone governor,
	  and select bus frequency votes using an "on-demand" alorithm.
	  This governor is unlikely to be useful for non-Adreno
	  devices.

config QCOM_ADRENO_DEFAULT_GOVERNOR
	string "devfreq governor for the adreno core"
	default "msm-adreno-tz" if DEVFREQ_GOV_QCOM_ADRENO_TZ
	default "simple_ondemand"
	depends on QCOM_KGSL

config QCOM_KGSL_CORESIGHT
	bool "Enable coresight support for the Adreno GPU"
	depends on QCOM_KGSL && CORESIGHT
	help
	  When enabled, the Adreno GPU is available as a source for Coresight
	  data. On a6xx targets there are two sources available for the GX and
	  CX domains respectively. Debug kernels should say 'Y' here.

config QCOM_KGSL_IOCOHERENCY_DEFAULT
	bool "Enable I/O coherency on cached GPU memory by default"
	depends on QCOM_KGSL
	default y if ARCH_LAHAINA
	help
	  Say 'Y' here to enable I/O cache coherency by default on targets that
	  support hardware I/O coherency. If enabled all cached GPU memory
	  will use I/O coherency regardless of the user flags. If not enabled
	  the user can still selectively enable I/O coherency with a flag.

config QCOM_KGSL_IOMMU
	bool
	default y if QCOM_KGSL && (MSM_IOMMU || ARM_SMMU)

config QCOM_KGSL_ENTRY_METADATA
	bool "Enable metadata field for KGSL memory entries"
	depends on QCOM_KGSL && DEBUG_FS
	help
	  Adds support for the metadata field for KGSL memory entries. This can
	  be used by applications to specially mark entries in when dumping
	  'mem' for a process in debugfs. This is never required for proper
	  functioning of the driver. Say 'N' unless there is a specific need
	  for this feature.

config QCOM_KGSL_TRACK_MEMFREE
	bool "Track freed memory entries"
	depends on QCOM_KGSL && QCOM_KGSL_IOMMU
	help
	  Adds tracking of freed memory entries to provide extra information
	  about premature frees to page fault logs. This adds substantial cost
	  to memory entry creation/destruction. Say 'N'.

config QCOM_KGSL_PAGE_POOLING
	bool "Enable support for KGSL page pools"
	default y if QCOM_KGSL

config QCOM_KGSL_LAZY_ALLOCATION
	bool "Enable support for lazily allocated memory entries"
	depends on QCOM_KGSL
	depends on QCOM_KGSL_IOMMU && ARM_SMMU
	default y if QCOM_KGSL
	help
	  Allow lazy allocation of backing pages for GPU memory entries. This
	  can reduce RAM usage substantially and it defers the CPU usage of
	  memory allocation for entries from all-at-once at entry creation
	  (legacy behavior) to the first time each page is written to. This is
	  nominally identical to how memory allocation works for normal
	  userspace allocations. Say 'Y'.

config QCOM_KGSL_LAZY_POOL_SIZE
	int "Number of pages to keep in the non-secure lazy allocation pool"
	depends on QCOM_KGSL_LAZY_ALLOCATION
	range 16 4096
	default 512
	help
	  Size (in pages) of the non-secure lazy allocation pool for GPU memory
	  entries. This should be tuned to keep allocations fed while minimizing
	  the time spent in the slow path of directly allocating pages in the
	  page fault handler.

config QCOM_KGSL_SECURE_LAZY_ALLOCATION
	bool "Allow lazy allocation for secure memory entries"
	depends on QCOM_KGSL_LAZY_ALLOCATION
	depends on QCOM_SECURE_BUFFER
	help
	  Allows lazy allocation for secure memory entries. Secure faults are
	  somewhat more expensive to handle than non-secure page faults due to
	  having to lock the allocated pages. Say 'Y' unless testing shows this
	  performance hit to be unacceptable as the reduction in memory usage
	  is substantial.

config QCOM_KGSL_SECURE_LAZY_POOL_SIZE
	int "Number of pages to keep in the secure lazy allocation pool"
	depends on QCOM_KGSL_SECURE_LAZY_ALLOCATION
	range 16 4096
	default 128
	help
	  Size (in pages) of the secure lazy allocation pool for GPU memory
	  entries. This should be tuned to keep allocations fed while avoiding
	  allocation retries in the page fault handler.

config QCOM_KGSL_LAZY_GLOBALS
	bool "Lazily allocate memory for globals"
	depends on QCOM_KGSL_LAZY_ALLOCATION
	default y if QCOM_KGSL
	help
	  Enables lazy allocation for global memory entries. This reduces
	  memory consumption at a small initial performance cost as pages are
	  faulted in. If unsure, say 'Y'.

config QCOM_KGSL_LAZY_GPUREADONLY
	bool "Lazily allocate memory for GPU read-only entries"
	depends on QCOM_KGSL_LAZY_ALLOCATION
	default y if QCOM_KGSL
	help
	  Enables lazy allocation by default for entries that are marked GPU
	  read-only, i.e. they are only write-allocated via CPU access. This
	  reduces memory consumption at a small performance cost. If unsure,
	  say 'Y'.

config QCOM_KGSL_LAZY_SYSTEM_PROCESSES
	bool "Lazily allocate memory for system processes"
	depends on QCOM_KGSL_LAZY_ALLOCATION
	default y if QCOM_KGSL
	help
	  Enables lazy allocation for system process memory entries, such as
	  surfaceflinger. If unsure, say 'Y'.
